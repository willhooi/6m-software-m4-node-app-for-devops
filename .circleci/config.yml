# This file tells CircleCI what to do
version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0

commands:
  install_deps:
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm

# Each job has 2 parts - 1. Executor, 2. Steps
jobs:
  scan:
      docker:
        - image: cimg/node:16.10
      environment:
        IMAGE_NAME: willhooi/test-repository
      steps:
          - checkout
          - setup_remote_docker
          - docker/check
          - run: docker build -t $IMAGE_NAME .
          - snyk/scan:
              docker-image-name: $IMAGE_NAME


  build:
    # Means spin up a container using node:16.10 and run the steps
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout 
      # Using node/install-packages is better than npm install
      # because it gives you CircleCI optimization (caching, lockfile, concise)
      - node/install-packages:
          pkg-manager: npm
      # Without orbs, we have to run everything manually using run
      # - run: |
      #     echo "Installing dependencies"
      #     npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - install_deps
      - run: |
          echo "Running tests..."
          npm run test
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      #1. verify docker is working
      #2. authenticate docker hub using credentials
      #3. set up docker client for operations
      - docker/check
      - docker/build:
          image: willhooi/test-repository
          tag: << pipeline.git.revision >>
      - docker/push:
          image: willhooi/test-repository
          tag: << pipeline.git.revision >>

  # deploy:
  #   docker:
  #     - image: cimg/node:16.10
  #   steps:
  #     - setup_remote_docker
  #     - heroku/install
  #     - checkout
  #     - docker/check
  #     - run:
  #         name: Deploy to Heroku
  #         command: |
  #           echo "Deploying pre-built image to Heroku.."
  #           heroku container:login
  #           heroku stack:set container --app willhooi/test-repository
  #           docker pull willhooi/test-repository:<< pipeline.git.revision >>
  #           docker tag willhooi/test-repository:<< pipeline.git.revision >> registry.heroku.com/sctp-devops/web
  #           docker push registry.heroku.com/sctp-devops/web
  #           docker container:release web --app sctp-devops
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container push
          command: |
            heroku container:login
            heroku stack:set container -a sctp-devops
            heroku container:push web -a sctp-devops
            heroku container:release web -a sctp-devops

# Define the workflow for job execution order
workflows:
  simple_workflow:
    jobs:
      - build: # Run build job first
          filters:
            branches:
              only:
                - main
                - release

      - test: # Run test job after build
          requires:
            - build # test depends on build
          filters:
            branches:
              only:
                - main
                - release
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main
            
      - publish:
          requires:
            - test
          filters:
            branches:
              only: release
              
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only: release
