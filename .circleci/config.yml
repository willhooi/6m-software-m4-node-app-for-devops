# This file tells CircleCI what to do
version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0

commands:
  install_deps:
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm

# Each job has 2 parts - 1. Executor, 2. Steps
jobs:
  build:
    # Means spin up a container using node:16.10 and run the steps
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      # Using node/install-packages is better than npm install
      # because it gives you CircleCI optimization (caching, lockfile, concise)
      - node/install-packages:
          pkg-manager: npm
      # Without orbs, we have to run everything manually using run
      # - run: |
      #     echo "Installing dependencies"
      #     npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - install_deps
      - run: |
          echo "Running tests..."
          npm run test
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      #1. verify docker is working
      #2. authenticate docker hub using credentials
      #3. set up docker client for operations
      - docker/check
      - docker/build:
          image: willhooi/test-repository
          #tag: <<pipeline.git.revision>>, latest
      - docker/push:
          image: willhooi/test-repository
          #tag: <<pipeline.git.revision>>, latest
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container push
          command: |
            heroku container:login
            heroku stack:set container -a sctp-devops
            heroku container:push web -a sctp-devops
            heroku container:release web -a sctp-devops



# Define the workflow for job execution order
workflows:
  simple_workflow:
    jobs:
      - build # Run build job first
      - test: # Run test job after build
          requires:
            - build # test depends on build
      - publish:
          requires:
            - test
      - deploy:
          requires:
            - publish 

